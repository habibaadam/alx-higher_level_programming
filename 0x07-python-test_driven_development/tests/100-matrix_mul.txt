The ``100-matrix_mul`` module
==============================

Usage
------

Importing a function from the module
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Multiplying matrices
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Multiplying matrices example 2
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Multiplying matrices example 3
    >>> first = [[1, 3, 8], [3, 5, 2], [4, 2, 9]]
    >>> second = [[1, -3, 4], [2, -1, 1], [3, -1, 0]]
    >>> matrix_mul(first, second)
    [[31, -14, 7], [19, -16, 17], [35, -23, 18]]
    
Multiplying matrices example 4
    >>> matrix_mul([[7, 7, 2]], [[4], [3], [7]])
    [[63]]

Passing None as second argument
    >>> matrix_mul([[7, 7, 2]], None)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Passing None as first argument
    >>> matrix_mul(None, [4])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Passing None as both arguments
    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Passing a char string as an argument
    >>> matrix_mul([[7, 7, 2]], [['4'], [3], [7]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

Passing a list of strings as argument
    >>> matrix_mul([[1, '2', 1], ['2', 2, '1']], [[4], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

Passing a list of tuples as arguments
    >>> matrix_mul([(7, 7, 2)], [(4, 3)])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Passing a list of string as argument
    >>> matrix_mul([[7, 7, 2]], [ "Habie"])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

Passing only one argument
    >>> matrix_mul([[7, 7, 2]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Passing no argument
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Passing a matrix with row having unequal size
    >>> matrix_mul([[2, 4, 8], [4, 3, 5]], [[2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

Passing a second matrix with row having unequal size
    >>> matrix_mul([[10, 10, 10], [], [11, 11, 11]], [[13], [2], [4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

Passing empty matrix as first argument
    >>> matrix_mul([], [[2, 8]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Passing empty matrix as second argument
    >>> matrix_mul([[2, 8]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

